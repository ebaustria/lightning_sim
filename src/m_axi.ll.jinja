source_filename = "m_axi_{{name}}.ll"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

declare void @__hlslitesim_set_read_req(i8* %addr, i32 %incr, i32 %size)
declare void @__hlslitesim_set_write_req(i8* %addr, i32 %incr, i32 %size)
declare i8* @__hlslitesim_update_read_req(i8* %addr)
declare i8* @__hlslitesim_update_write_req(i8* %addr)
declare void @__hlslitesim_write_resp(i8* %addr)

define i1 @_ssdm_op_ReadReq.m_axi.{{name}}({{T}} addrspace(1)* %addr, i32 %size) {
  %1 = addrspacecast {{T}} addrspace(1)* %addr to i8*
  call void @__hlslitesim_set_read_req(i8* %1, i32 {{(N + 7) // 8}}, i32 %size)
  ret i1 true
}

define i1 @_ssdm_op_WriteReq.m_axi.{{name}}({{T}} addrspace(1)* %addr, i32 %size) {
  %1 = addrspacecast {{T}} addrspace(1)* %addr to i8*
  call void @__hlslitesim_set_write_req(i8* %1, i32 {{(N + 7) // 8}}, i32 %size)
  ret i1 true
}

define i1 @_ssdm_op_WriteResp.m_axi.{{name}}({{T}} addrspace(1)* %addr) {
  %1 = addrspacecast {{T}} addrspace(1)* %addr to i8*
  call void @__hlslitesim_write_resp(i8* %1)
  ret i1 true
}

define {{T}} @_ssdm_op_Read.m_axi.{{name}}({{T}} addrspace(1)* %addr) {
  %1 = addrspacecast {{T}} addrspace(1)* %addr to i8*
  %2 = call i8* @__hlslitesim_update_read_req(i8* %1)
  %3 = addrspacecast i8* %2 to {{T}} addrspace(1)*
  %4 = load {{T}}, {{T}} addrspace(1)* %3
  ret {{T}} %4
}

define void @_ssdm_op_Write.m_axi.{{name}}({{T}} addrspace(1)* %addr, {{T}} %val, i64) {
  %2 = addrspacecast {{T}} addrspace(1)* %addr to i8*
  %3 = call i8* @__hlslitesim_update_write_req(i8* %2)
  %4 = addrspacecast i8* %3 to {{T}} addrspace(1)*
  store {{T}} %val, {{T}} addrspace(1)* %4
  ret void
}
